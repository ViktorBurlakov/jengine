/*
 * This file is part of JEngine.
 *
 * Copyright (C) 2013 Victor Burlakov
 *
 * JEngine is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * JEngine is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with JEngine.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.jenginetest.builder.model.impl;

import com.jenginetest.builder.model.WLTaskOption;
import com.jenginetest.builder.model.WLTaskOptionModel;
import com.jenginetest.builder.model.WLTaskOptionSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the WLTaskOption service. Represents a row in the &quot;WL_WLTaskOption&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.jenginetest.builder.model.WLTaskOptionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WLTaskOptionImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see WLTaskOptionImpl
 * @see com.jenginetest.builder.model.WLTaskOption
 * @see com.jenginetest.builder.model.WLTaskOptionModel
 * @generated
 */
@JSON(strict = true)
public class WLTaskOptionModelImpl extends BaseModelImpl<WLTaskOption>
	implements WLTaskOptionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a w l task option model instance should use the {@link com.jenginetest.builder.model.WLTaskOption} interface instead.
	 */
	public static final String TABLE_NAME = "WL_WLTaskOption";
	public static final Object[][] TABLE_COLUMNS = {
			{ "optionId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createUserId", Types.BIGINT },
			{ "createUserName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedUserId", Types.BIGINT },
			{ "modifiedUserName", Types.VARCHAR },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "taskId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "data_", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table WL_WLTaskOption (optionId LONG not null primary key,groupId LONG,companyId LONG,createUserId LONG,createUserName VARCHAR(75) null,createDate DATE null,modifiedUserId LONG,modifiedUserName VARCHAR(75) null,modifiedDate DATE null,taskId LONG,name VARCHAR(75) null,data_ VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table WL_WLTaskOption";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.jenginetest.builder.model.WLTaskOption"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.jenginetest.builder.model.WLTaskOption"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static WLTaskOption toModel(WLTaskOptionSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		WLTaskOption model = new WLTaskOptionImpl();

		model.setOptionId(soapModel.getOptionId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCreateUserId(soapModel.getCreateUserId());
		model.setCreateUserName(soapModel.getCreateUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedUserId(soapModel.getModifiedUserId());
		model.setModifiedUserName(soapModel.getModifiedUserName());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setTaskId(soapModel.getTaskId());
		model.setName(soapModel.getName());
		model.setData(soapModel.getData());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<WLTaskOption> toModels(WLTaskOptionSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<WLTaskOption> models = new ArrayList<WLTaskOption>(soapModels.length);

		for (WLTaskOptionSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.jenginetest.builder.model.WLTaskOption"));

	public WLTaskOptionModelImpl() {
	}

	public long getPrimaryKey() {
		return _optionId;
	}

	public void setPrimaryKey(long primaryKey) {
		setOptionId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_optionId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return WLTaskOption.class;
	}

	public String getModelClassName() {
		return WLTaskOption.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("optionId", getOptionId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createUserId", getCreateUserId());
		attributes.put("createUserName", getCreateUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedUserId", getModifiedUserId());
		attributes.put("modifiedUserName", getModifiedUserName());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("taskId", getTaskId());
		attributes.put("name", getName());
		attributes.put("data", getData());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long optionId = (Long)attributes.get("optionId");

		if (optionId != null) {
			setOptionId(optionId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long createUserId = (Long)attributes.get("createUserId");

		if (createUserId != null) {
			setCreateUserId(createUserId);
		}

		String createUserName = (String)attributes.get("createUserName");

		if (createUserName != null) {
			setCreateUserName(createUserName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Long modifiedUserId = (Long)attributes.get("modifiedUserId");

		if (modifiedUserId != null) {
			setModifiedUserId(modifiedUserId);
		}

		String modifiedUserName = (String)attributes.get("modifiedUserName");

		if (modifiedUserName != null) {
			setModifiedUserName(modifiedUserName);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long taskId = (Long)attributes.get("taskId");

		if (taskId != null) {
			setTaskId(taskId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String data = (String)attributes.get("data");

		if (data != null) {
			setData(data);
		}
	}

	@JSON
	public long getOptionId() {
		return _optionId;
	}

	public void setOptionId(long optionId) {
		_optionId = optionId;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	public long getCreateUserId() {
		return _createUserId;
	}

	public void setCreateUserId(long createUserId) {
		_createUserId = createUserId;
	}

	public String getCreateUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getCreateUserId(), "uuid",
			_createUserUuid);
	}

	public void setCreateUserUuid(String createUserUuid) {
		_createUserUuid = createUserUuid;
	}

	@JSON
	public String getCreateUserName() {
		if (_createUserName == null) {
			return StringPool.BLANK;
		}
		else {
			return _createUserName;
		}
	}

	public void setCreateUserName(String createUserName) {
		_createUserName = createUserName;
	}

	@JSON
	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	public long getModifiedUserId() {
		return _modifiedUserId;
	}

	public void setModifiedUserId(long modifiedUserId) {
		_modifiedUserId = modifiedUserId;
	}

	public String getModifiedUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getModifiedUserId(), "uuid",
			_modifiedUserUuid);
	}

	public void setModifiedUserUuid(String modifiedUserUuid) {
		_modifiedUserUuid = modifiedUserUuid;
	}

	@JSON
	public String getModifiedUserName() {
		if (_modifiedUserName == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedUserName;
		}
	}

	public void setModifiedUserName(String modifiedUserName) {
		_modifiedUserName = modifiedUserName;
	}

	@JSON
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	public long getTaskId() {
		return _taskId;
	}

	public void setTaskId(long taskId) {
		_taskId = taskId;
	}

	@JSON
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	public void setName(String name) {
		_name = name;
	}

	@JSON
	public String getData() {
		if (_data == null) {
			return StringPool.BLANK;
		}
		else {
			return _data;
		}
	}

	public void setData(String data) {
		_data = data;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			WLTaskOption.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public WLTaskOption toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (WLTaskOption)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		WLTaskOptionImpl wlTaskOptionImpl = new WLTaskOptionImpl();

		wlTaskOptionImpl.setOptionId(getOptionId());
		wlTaskOptionImpl.setGroupId(getGroupId());
		wlTaskOptionImpl.setCompanyId(getCompanyId());
		wlTaskOptionImpl.setCreateUserId(getCreateUserId());
		wlTaskOptionImpl.setCreateUserName(getCreateUserName());
		wlTaskOptionImpl.setCreateDate(getCreateDate());
		wlTaskOptionImpl.setModifiedUserId(getModifiedUserId());
		wlTaskOptionImpl.setModifiedUserName(getModifiedUserName());
		wlTaskOptionImpl.setModifiedDate(getModifiedDate());
		wlTaskOptionImpl.setTaskId(getTaskId());
		wlTaskOptionImpl.setName(getName());
		wlTaskOptionImpl.setData(getData());

		wlTaskOptionImpl.resetOriginalValues();

		return wlTaskOptionImpl;
	}

	public int compareTo(WLTaskOption wlTaskOption) {
		long primaryKey = wlTaskOption.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		WLTaskOption wlTaskOption = null;

		try {
			wlTaskOption = (WLTaskOption)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = wlTaskOption.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<WLTaskOption> toCacheModel() {
		WLTaskOptionCacheModel wlTaskOptionCacheModel = new WLTaskOptionCacheModel();

		wlTaskOptionCacheModel.optionId = getOptionId();

		wlTaskOptionCacheModel.groupId = getGroupId();

		wlTaskOptionCacheModel.companyId = getCompanyId();

		wlTaskOptionCacheModel.createUserId = getCreateUserId();

		wlTaskOptionCacheModel.createUserName = getCreateUserName();

		String createUserName = wlTaskOptionCacheModel.createUserName;

		if ((createUserName != null) && (createUserName.length() == 0)) {
			wlTaskOptionCacheModel.createUserName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			wlTaskOptionCacheModel.createDate = createDate.getTime();
		}
		else {
			wlTaskOptionCacheModel.createDate = Long.MIN_VALUE;
		}

		wlTaskOptionCacheModel.modifiedUserId = getModifiedUserId();

		wlTaskOptionCacheModel.modifiedUserName = getModifiedUserName();

		String modifiedUserName = wlTaskOptionCacheModel.modifiedUserName;

		if ((modifiedUserName != null) && (modifiedUserName.length() == 0)) {
			wlTaskOptionCacheModel.modifiedUserName = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			wlTaskOptionCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			wlTaskOptionCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		wlTaskOptionCacheModel.taskId = getTaskId();

		wlTaskOptionCacheModel.name = getName();

		String name = wlTaskOptionCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			wlTaskOptionCacheModel.name = null;
		}

		wlTaskOptionCacheModel.data = getData();

		String data = wlTaskOptionCacheModel.data;

		if ((data != null) && (data.length() == 0)) {
			wlTaskOptionCacheModel.data = null;
		}

		return wlTaskOptionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{optionId=");
		sb.append(getOptionId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createUserId=");
		sb.append(getCreateUserId());
		sb.append(", createUserName=");
		sb.append(getCreateUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedUserId=");
		sb.append(getModifiedUserId());
		sb.append(", modifiedUserName=");
		sb.append(getModifiedUserName());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", taskId=");
		sb.append(getTaskId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", data=");
		sb.append(getData());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.jenginetest.builder.model.WLTaskOption");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>optionId</column-name><column-value><![CDATA[");
		sb.append(getOptionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createUserId</column-name><column-value><![CDATA[");
		sb.append(getCreateUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createUserName</column-name><column-value><![CDATA[");
		sb.append(getCreateUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedUserId</column-name><column-value><![CDATA[");
		sb.append(getModifiedUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedUserName</column-name><column-value><![CDATA[");
		sb.append(getModifiedUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>taskId</column-name><column-value><![CDATA[");
		sb.append(getTaskId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data</column-name><column-value><![CDATA[");
		sb.append(getData());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = WLTaskOption.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			WLTaskOption.class
		};
	private long _optionId;
	private long _groupId;
	private long _companyId;
	private long _createUserId;
	private String _createUserUuid;
	private String _createUserName;
	private Date _createDate;
	private long _modifiedUserId;
	private String _modifiedUserUuid;
	private String _modifiedUserName;
	private Date _modifiedDate;
	private long _taskId;
	private String _name;
	private String _data;
	private WLTaskOption _escapedModelProxy;
}