
package com.jengine.orm.db.query.parser;

public interface SqlTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int SQL_STATEMENT = 4;
	int SELECT_LIST = 5;
	int TABLE_REFERENCE_LIST = 6;
	int WHERE_CONDITION = 7;
	int SUBQUERY = 8;
	int SQL_IDENTIFIER = 9;
	int SQL_LITERAL = 10;
	int FUNCTION = 11;
	int GROUP_FUNCTION = 12;
	int USER_FUNCTION = 13;
	int MULTIPLY = 14;
	int COLUMN_SPEC = 15;
	int SEMI = 16;
	int LITERAL_union = 17;
	int OPEN_PAREN = 18;
	int CLOSE_PAREN = 19;
	int LITERAL_select = 20;
	int LITERAL_all = 21;
	int LITERAL_distinct = 22;
	int LITERAL_from = 23;
	int LITERAL_where = 24;
	int COMMA = 25;
	int ASTERISK = 26;
	int DOT = 27;
	int PLUS = 28;
	int MINUS = 29;
	int LITERAL_as = 30;
	int DIVIDE = 31;
	int VERTBAR = 32;
	int NUMBER = 33;
	int QUOTED_STRING = 34;
	int LITERAL_null = 35;
	int QUESTION = 36;
	int LITERAL_abs = 37;
	int LITERAL_ceil = 38;
	int LITERAL_floor = 39;
	int LITERAL_mod = 40;
	int LITERAL_power = 41;
	int LITERAL_round = 42;
	int LITERAL_sign = 43;
	int LITERAL_sqrt = 44;
	int LITERAL_trunc = 45;
	int LITERAL_chr = 46;
	int LITERAL_initcap = 47;
	int LITERAL_lower = 48;
	int LITERAL_lpad = 49;
	int LITERAL_ltrim = 50;
	int LITERAL_replace = 51;
	int LITERAL_rpad = 52;
	int LITERAL_rtrim = 53;
	int LITERAL_soundex = 54;
	int LITERAL_substr = 55;
	int LITERAL_translate = 56;
	int LITERAL_upper = 57;
	int LITERAL_ascii = 58;
	int LITERAL_instr = 59;
	int LITERAL_length = 60;
	int LITERAL_concat = 61;
	int LITERAL_avg = 62;
	int LITERAL_count = 63;
	int LITERAL_max = 64;
	int LITERAL_min = 65;
	int LITERAL_stddev = 66;
	int LITERAL_sum = 67;
	int LITERAL_variance = 68;
	int LITERAL_chartorowid = 69;
	int LITERAL_convert = 70;
	int LITERAL_hextoraw = 71;
	int LITERAL_rawtohex = 72;
	int LITERAL_rowidtochar = 73;
	int LITERAL_to_char = 74;
	int LITERAL_to_date = 75;
	int LITERAL_to_number = 76;
	int LITERAL_decode = 77;
	int LITERAL_dump = 78;
	int LITERAL_greatest = 79;
	int LITERAL_least = 80;
	int LITERAL_nvl = 81;
	int LITERAL_uid = 82;
	int LITERAL_userenv = 83;
	int LITERAL_vsize = 84;
	int LITERAL_user = 85;
	int LITERAL_sysdate = 86;
	int AT_SIGN = 87;
	int LITERAL_or = 88;
	int LITERAL_and = 89;
	int LITERAL_prior = 90;
	int LITERAL_not = 91;
	int LITERAL_in = 92;
	int LITERAL_like = 93;
	int LITERAL_escape = 94;
	int LITERAL_between = 95;
	int LITERAL_is = 96;
	int LITERAL_any = 97;
	int LITERAL_exists = 98;
	int EQ = 99;
	int LT = 100;
	int GT = 101;
	int NOT_EQ = 102;
	int LE = 103;
	int GE = 104;
	int LITERAL_start = 105;
	int LITERAL_with = 106;
	int LITERAL_connect = 107;
	int LITERAL_by = 108;
	int LITERAL_group = 109;
	int LITERAL_having = 110;
	int LITERAL_intersect = 111;
	int LITERAL_minus = 112;
	int LITERAL_order = 113;
	int LITERAL_asc = 114;
	int LITERAL_desc = 115;
	int LITERAL_for = 116;
	int LITERAL_update = 117;
	int LITERAL_of = 118;
	int LITERAL_nowait = 119;
	int LITERAL_delete = 120;
	int LITERAL_set = 121;
	int IDENTIFIER = 122;
	int N = 123;
	int DOUBLE_QUOTE = 124;
	int WS = 125;
	int ML_COMMENT = 126;
}
