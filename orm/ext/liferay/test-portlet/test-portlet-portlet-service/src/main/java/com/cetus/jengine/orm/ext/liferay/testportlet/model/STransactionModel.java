package com.cetus.jengine.orm.ext.liferay.testportlet.model;

import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the STransaction service. Represents a row in the &quot;SB_STransaction&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.cetus.jengine.orm.ext.liferay.testportlet.model.impl.STransactionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.cetus.jengine.orm.ext.liferay.testportlet.model.impl.STransactionImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see STransaction
 * @see com.cetus.jengine.orm.ext.liferay.testportlet.model.impl.STransactionImpl
 * @see com.cetus.jengine.orm.ext.liferay.testportlet.model.impl.STransactionModelImpl
 * @generated
 */
public interface STransactionModel extends BaseModel<STransaction> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a s transaction model instance should use the {@link STransaction} interface instead.
     */

    /**
     * Returns the primary key of this s transaction.
     *
     * @return the primary key of this s transaction
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this s transaction.
     *
     * @param primaryKey the primary key of this s transaction
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the transaction ID of this s transaction.
     *
     * @return the transaction ID of this s transaction
     */
    public long getTransactionId();

    /**
     * Sets the transaction ID of this s transaction.
     *
     * @param transactionId the transaction ID of this s transaction
     */
    public void setTransactionId(long transactionId);

    /**
     * Returns the book ID of this s transaction.
     *
     * @return the book ID of this s transaction
     */
    public long getBookId();

    /**
     * Sets the book ID of this s transaction.
     *
     * @param bookId the book ID of this s transaction
     */
    public void setBookId(long bookId);

    /**
     * Returns the member ID of this s transaction.
     *
     * @return the member ID of this s transaction
     */
    public long getMemberId();

    /**
     * Sets the member ID of this s transaction.
     *
     * @param memberId the member ID of this s transaction
     */
    public void setMemberId(long memberId);

    /**
     * Returns the tdate of this s transaction.
     *
     * @return the tdate of this s transaction
     */
    public Date getTdate();

    /**
     * Sets the tdate of this s transaction.
     *
     * @param tdate the tdate of this s transaction
     */
    public void setTdate(Date tdate);

    public boolean isNew();

    public void setNew(boolean n);

    public boolean isCachedModel();

    public void setCachedModel(boolean cachedModel);

    public boolean isEscapedModel();

    public Serializable getPrimaryKeyObj();

    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    public ExpandoBridge getExpandoBridge();

    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    public Object clone();

    public int compareTo(STransaction sTransaction);

    public int hashCode();

    public CacheModel<STransaction> toCacheModel();

    public STransaction toEscapedModel();

    public String toString();

    public String toXmlString();
}
