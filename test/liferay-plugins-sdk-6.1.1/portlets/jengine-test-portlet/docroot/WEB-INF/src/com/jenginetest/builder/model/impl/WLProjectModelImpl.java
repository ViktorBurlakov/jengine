/*
 * This file is part of JEngine.
 *
 * Copyright (C) 2013 Victor Burlakov
 *
 * JEngine is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * JEngine is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with JEngine.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.jenginetest.builder.model.impl;

import com.jenginetest.builder.model.WLProject;
import com.jenginetest.builder.model.WLProjectModel;
import com.jenginetest.builder.model.WLProjectSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the WLProject service. Represents a row in the &quot;WL_WLProject&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.jenginetest.builder.model.WLProjectModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WLProjectImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see WLProjectImpl
 * @see com.jenginetest.builder.model.WLProject
 * @see com.jenginetest.builder.model.WLProjectModel
 * @generated
 */
@JSON(strict = true)
public class WLProjectModelImpl extends BaseModelImpl<WLProject>
	implements WLProjectModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a w l project model instance should use the {@link com.jenginetest.builder.model.WLProject} interface instead.
	 */
	public static final String TABLE_NAME = "WL_WLProject";
	public static final Object[][] TABLE_COLUMNS = {
			{ "projectId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createUserId", Types.BIGINT },
			{ "createUserName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedUserId", Types.BIGINT },
			{ "modifiedUserName", Types.VARCHAR },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "startDate", Types.TIMESTAMP },
			{ "title", Types.VARCHAR },
			{ "status", Types.INTEGER },
			{ "description", Types.VARCHAR },
			{ "color", Types.VARCHAR },
			{ "lockEnable", Types.BOOLEAN },
			{ "lockPeriodType", Types.VARCHAR },
			{ "lockDeferment", Types.INTEGER },
			{ "automaticallyAssign", Types.BOOLEAN },
			{ "defaultProject", Types.BOOLEAN },
			{ "externalUrl", Types.VARCHAR },
			{ "externalMandatory", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table WL_WLProject (projectId LONG not null primary key,groupId LONG,companyId LONG,createUserId LONG,createUserName VARCHAR(75) null,createDate DATE null,modifiedUserId LONG,modifiedUserName VARCHAR(75) null,modifiedDate DATE null,startDate DATE null,title VARCHAR(75) null,status INTEGER,description VARCHAR(75) null,color VARCHAR(75) null,lockEnable BOOLEAN,lockPeriodType VARCHAR(75) null,lockDeferment INTEGER,automaticallyAssign BOOLEAN,defaultProject BOOLEAN,externalUrl VARCHAR(75) null,externalMandatory BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table WL_WLProject";
	public static final String ORDER_BY_JPQL = " ORDER BY wlProject.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY WL_WLProject.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.jenginetest.builder.model.WLProject"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.jenginetest.builder.model.WLProject"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.jenginetest.builder.model.WLProject"),
			true);
	public static long AUTOMATICALLYASSIGN_COLUMN_BITMASK = 1L;
	public static long COMPANYID_COLUMN_BITMASK = 2L;
	public static long DEFAULTPROJECT_COLUMN_BITMASK = 4L;
	public static long GROUPID_COLUMN_BITMASK = 8L;
	public static long TITLE_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static WLProject toModel(WLProjectSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		WLProject model = new WLProjectImpl();

		model.setProjectId(soapModel.getProjectId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCreateUserId(soapModel.getCreateUserId());
		model.setCreateUserName(soapModel.getCreateUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedUserId(soapModel.getModifiedUserId());
		model.setModifiedUserName(soapModel.getModifiedUserName());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setStartDate(soapModel.getStartDate());
		model.setTitle(soapModel.getTitle());
		model.setStatus(soapModel.getStatus());
		model.setDescription(soapModel.getDescription());
		model.setColor(soapModel.getColor());
		model.setLockEnable(soapModel.getLockEnable());
		model.setLockPeriodType(soapModel.getLockPeriodType());
		model.setLockDeferment(soapModel.getLockDeferment());
		model.setAutomaticallyAssign(soapModel.getAutomaticallyAssign());
		model.setDefaultProject(soapModel.getDefaultProject());
		model.setExternalUrl(soapModel.getExternalUrl());
		model.setExternalMandatory(soapModel.getExternalMandatory());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<WLProject> toModels(WLProjectSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<WLProject> models = new ArrayList<WLProject>(soapModels.length);

		for (WLProjectSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.jenginetest.builder.model.WLProject"));

	public WLProjectModelImpl() {
	}

	public long getPrimaryKey() {
		return _projectId;
	}

	public void setPrimaryKey(long primaryKey) {
		setProjectId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_projectId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return WLProject.class;
	}

	public String getModelClassName() {
		return WLProject.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("projectId", getProjectId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createUserId", getCreateUserId());
		attributes.put("createUserName", getCreateUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedUserId", getModifiedUserId());
		attributes.put("modifiedUserName", getModifiedUserName());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("startDate", getStartDate());
		attributes.put("title", getTitle());
		attributes.put("status", getStatus());
		attributes.put("description", getDescription());
		attributes.put("color", getColor());
		attributes.put("lockEnable", getLockEnable());
		attributes.put("lockPeriodType", getLockPeriodType());
		attributes.put("lockDeferment", getLockDeferment());
		attributes.put("automaticallyAssign", getAutomaticallyAssign());
		attributes.put("defaultProject", getDefaultProject());
		attributes.put("externalUrl", getExternalUrl());
		attributes.put("externalMandatory", getExternalMandatory());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long projectId = (Long)attributes.get("projectId");

		if (projectId != null) {
			setProjectId(projectId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long createUserId = (Long)attributes.get("createUserId");

		if (createUserId != null) {
			setCreateUserId(createUserId);
		}

		String createUserName = (String)attributes.get("createUserName");

		if (createUserName != null) {
			setCreateUserName(createUserName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Long modifiedUserId = (Long)attributes.get("modifiedUserId");

		if (modifiedUserId != null) {
			setModifiedUserId(modifiedUserId);
		}

		String modifiedUserName = (String)attributes.get("modifiedUserName");

		if (modifiedUserName != null) {
			setModifiedUserName(modifiedUserName);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Date startDate = (Date)attributes.get("startDate");

		if (startDate != null) {
			setStartDate(startDate);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String color = (String)attributes.get("color");

		if (color != null) {
			setColor(color);
		}

		Boolean lockEnable = (Boolean)attributes.get("lockEnable");

		if (lockEnable != null) {
			setLockEnable(lockEnable);
		}

		String lockPeriodType = (String)attributes.get("lockPeriodType");

		if (lockPeriodType != null) {
			setLockPeriodType(lockPeriodType);
		}

		Integer lockDeferment = (Integer)attributes.get("lockDeferment");

		if (lockDeferment != null) {
			setLockDeferment(lockDeferment);
		}

		Boolean automaticallyAssign = (Boolean)attributes.get(
				"automaticallyAssign");

		if (automaticallyAssign != null) {
			setAutomaticallyAssign(automaticallyAssign);
		}

		Boolean defaultProject = (Boolean)attributes.get("defaultProject");

		if (defaultProject != null) {
			setDefaultProject(defaultProject);
		}

		String externalUrl = (String)attributes.get("externalUrl");

		if (externalUrl != null) {
			setExternalUrl(externalUrl);
		}

		Boolean externalMandatory = (Boolean)attributes.get("externalMandatory");

		if (externalMandatory != null) {
			setExternalMandatory(externalMandatory);
		}
	}

	@JSON
	public long getProjectId() {
		return _projectId;
	}

	public void setProjectId(long projectId) {
		_projectId = projectId;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	public long getCreateUserId() {
		return _createUserId;
	}

	public void setCreateUserId(long createUserId) {
		_createUserId = createUserId;
	}

	public String getCreateUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getCreateUserId(), "uuid",
			_createUserUuid);
	}

	public void setCreateUserUuid(String createUserUuid) {
		_createUserUuid = createUserUuid;
	}

	@JSON
	public String getCreateUserName() {
		if (_createUserName == null) {
			return StringPool.BLANK;
		}
		else {
			return _createUserName;
		}
	}

	public void setCreateUserName(String createUserName) {
		_createUserName = createUserName;
	}

	@JSON
	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	public long getModifiedUserId() {
		return _modifiedUserId;
	}

	public void setModifiedUserId(long modifiedUserId) {
		_modifiedUserId = modifiedUserId;
	}

	public String getModifiedUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getModifiedUserId(), "uuid",
			_modifiedUserUuid);
	}

	public void setModifiedUserUuid(String modifiedUserUuid) {
		_modifiedUserUuid = modifiedUserUuid;
	}

	@JSON
	public String getModifiedUserName() {
		if (_modifiedUserName == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedUserName;
		}
	}

	public void setModifiedUserName(String modifiedUserName) {
		_modifiedUserName = modifiedUserName;
	}

	@JSON
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	public Date getStartDate() {
		return _startDate;
	}

	public void setStartDate(Date startDate) {
		_startDate = startDate;
	}

	@JSON
	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	public void setTitle(String title) {
		_columnBitmask |= TITLE_COLUMN_BITMASK;

		if (_originalTitle == null) {
			_originalTitle = _title;
		}

		_title = title;
	}

	public String getOriginalTitle() {
		return GetterUtil.getString(_originalTitle);
	}

	@JSON
	public int getStatus() {
		return _status;
	}

	public void setStatus(int status) {
		_status = status;
	}

	@JSON
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	public String getColor() {
		if (_color == null) {
			return StringPool.BLANK;
		}
		else {
			return _color;
		}
	}

	public void setColor(String color) {
		_color = color;
	}

	@JSON
	public boolean getLockEnable() {
		return _lockEnable;
	}

	public boolean isLockEnable() {
		return _lockEnable;
	}

	public void setLockEnable(boolean lockEnable) {
		_lockEnable = lockEnable;
	}

	@JSON
	public String getLockPeriodType() {
		if (_lockPeriodType == null) {
			return StringPool.BLANK;
		}
		else {
			return _lockPeriodType;
		}
	}

	public void setLockPeriodType(String lockPeriodType) {
		_lockPeriodType = lockPeriodType;
	}

	@JSON
	public int getLockDeferment() {
		return _lockDeferment;
	}

	public void setLockDeferment(int lockDeferment) {
		_lockDeferment = lockDeferment;
	}

	@JSON
	public boolean getAutomaticallyAssign() {
		return _automaticallyAssign;
	}

	public boolean isAutomaticallyAssign() {
		return _automaticallyAssign;
	}

	public void setAutomaticallyAssign(boolean automaticallyAssign) {
		_columnBitmask |= AUTOMATICALLYASSIGN_COLUMN_BITMASK;

		if (!_setOriginalAutomaticallyAssign) {
			_setOriginalAutomaticallyAssign = true;

			_originalAutomaticallyAssign = _automaticallyAssign;
		}

		_automaticallyAssign = automaticallyAssign;
	}

	public boolean getOriginalAutomaticallyAssign() {
		return _originalAutomaticallyAssign;
	}

	@JSON
	public boolean getDefaultProject() {
		return _defaultProject;
	}

	public boolean isDefaultProject() {
		return _defaultProject;
	}

	public void setDefaultProject(boolean defaultProject) {
		_columnBitmask |= DEFAULTPROJECT_COLUMN_BITMASK;

		if (!_setOriginalDefaultProject) {
			_setOriginalDefaultProject = true;

			_originalDefaultProject = _defaultProject;
		}

		_defaultProject = defaultProject;
	}

	public boolean getOriginalDefaultProject() {
		return _originalDefaultProject;
	}

	@JSON
	public String getExternalUrl() {
		if (_externalUrl == null) {
			return StringPool.BLANK;
		}
		else {
			return _externalUrl;
		}
	}

	public void setExternalUrl(String externalUrl) {
		_externalUrl = externalUrl;
	}

	@JSON
	public boolean getExternalMandatory() {
		return _externalMandatory;
	}

	public boolean isExternalMandatory() {
		return _externalMandatory;
	}

	public void setExternalMandatory(boolean externalMandatory) {
		_externalMandatory = externalMandatory;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			WLProject.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public WLProject toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (WLProject)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		WLProjectImpl wlProjectImpl = new WLProjectImpl();

		wlProjectImpl.setProjectId(getProjectId());
		wlProjectImpl.setGroupId(getGroupId());
		wlProjectImpl.setCompanyId(getCompanyId());
		wlProjectImpl.setCreateUserId(getCreateUserId());
		wlProjectImpl.setCreateUserName(getCreateUserName());
		wlProjectImpl.setCreateDate(getCreateDate());
		wlProjectImpl.setModifiedUserId(getModifiedUserId());
		wlProjectImpl.setModifiedUserName(getModifiedUserName());
		wlProjectImpl.setModifiedDate(getModifiedDate());
		wlProjectImpl.setStartDate(getStartDate());
		wlProjectImpl.setTitle(getTitle());
		wlProjectImpl.setStatus(getStatus());
		wlProjectImpl.setDescription(getDescription());
		wlProjectImpl.setColor(getColor());
		wlProjectImpl.setLockEnable(getLockEnable());
		wlProjectImpl.setLockPeriodType(getLockPeriodType());
		wlProjectImpl.setLockDeferment(getLockDeferment());
		wlProjectImpl.setAutomaticallyAssign(getAutomaticallyAssign());
		wlProjectImpl.setDefaultProject(getDefaultProject());
		wlProjectImpl.setExternalUrl(getExternalUrl());
		wlProjectImpl.setExternalMandatory(getExternalMandatory());

		wlProjectImpl.resetOriginalValues();

		return wlProjectImpl;
	}

	public int compareTo(WLProject wlProject) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), wlProject.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		WLProject wlProject = null;

		try {
			wlProject = (WLProject)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = wlProject.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		WLProjectModelImpl wlProjectModelImpl = this;

		wlProjectModelImpl._originalGroupId = wlProjectModelImpl._groupId;

		wlProjectModelImpl._setOriginalGroupId = false;

		wlProjectModelImpl._originalCompanyId = wlProjectModelImpl._companyId;

		wlProjectModelImpl._setOriginalCompanyId = false;

		wlProjectModelImpl._originalTitle = wlProjectModelImpl._title;

		wlProjectModelImpl._originalAutomaticallyAssign = wlProjectModelImpl._automaticallyAssign;

		wlProjectModelImpl._setOriginalAutomaticallyAssign = false;

		wlProjectModelImpl._originalDefaultProject = wlProjectModelImpl._defaultProject;

		wlProjectModelImpl._setOriginalDefaultProject = false;

		wlProjectModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<WLProject> toCacheModel() {
		WLProjectCacheModel wlProjectCacheModel = new WLProjectCacheModel();

		wlProjectCacheModel.projectId = getProjectId();

		wlProjectCacheModel.groupId = getGroupId();

		wlProjectCacheModel.companyId = getCompanyId();

		wlProjectCacheModel.createUserId = getCreateUserId();

		wlProjectCacheModel.createUserName = getCreateUserName();

		String createUserName = wlProjectCacheModel.createUserName;

		if ((createUserName != null) && (createUserName.length() == 0)) {
			wlProjectCacheModel.createUserName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			wlProjectCacheModel.createDate = createDate.getTime();
		}
		else {
			wlProjectCacheModel.createDate = Long.MIN_VALUE;
		}

		wlProjectCacheModel.modifiedUserId = getModifiedUserId();

		wlProjectCacheModel.modifiedUserName = getModifiedUserName();

		String modifiedUserName = wlProjectCacheModel.modifiedUserName;

		if ((modifiedUserName != null) && (modifiedUserName.length() == 0)) {
			wlProjectCacheModel.modifiedUserName = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			wlProjectCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			wlProjectCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		Date startDate = getStartDate();

		if (startDate != null) {
			wlProjectCacheModel.startDate = startDate.getTime();
		}
		else {
			wlProjectCacheModel.startDate = Long.MIN_VALUE;
		}

		wlProjectCacheModel.title = getTitle();

		String title = wlProjectCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			wlProjectCacheModel.title = null;
		}

		wlProjectCacheModel.status = getStatus();

		wlProjectCacheModel.description = getDescription();

		String description = wlProjectCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			wlProjectCacheModel.description = null;
		}

		wlProjectCacheModel.color = getColor();

		String color = wlProjectCacheModel.color;

		if ((color != null) && (color.length() == 0)) {
			wlProjectCacheModel.color = null;
		}

		wlProjectCacheModel.lockEnable = getLockEnable();

		wlProjectCacheModel.lockPeriodType = getLockPeriodType();

		String lockPeriodType = wlProjectCacheModel.lockPeriodType;

		if ((lockPeriodType != null) && (lockPeriodType.length() == 0)) {
			wlProjectCacheModel.lockPeriodType = null;
		}

		wlProjectCacheModel.lockDeferment = getLockDeferment();

		wlProjectCacheModel.automaticallyAssign = getAutomaticallyAssign();

		wlProjectCacheModel.defaultProject = getDefaultProject();

		wlProjectCacheModel.externalUrl = getExternalUrl();

		String externalUrl = wlProjectCacheModel.externalUrl;

		if ((externalUrl != null) && (externalUrl.length() == 0)) {
			wlProjectCacheModel.externalUrl = null;
		}

		wlProjectCacheModel.externalMandatory = getExternalMandatory();

		return wlProjectCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(43);

		sb.append("{projectId=");
		sb.append(getProjectId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createUserId=");
		sb.append(getCreateUserId());
		sb.append(", createUserName=");
		sb.append(getCreateUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedUserId=");
		sb.append(getModifiedUserId());
		sb.append(", modifiedUserName=");
		sb.append(getModifiedUserName());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", startDate=");
		sb.append(getStartDate());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", color=");
		sb.append(getColor());
		sb.append(", lockEnable=");
		sb.append(getLockEnable());
		sb.append(", lockPeriodType=");
		sb.append(getLockPeriodType());
		sb.append(", lockDeferment=");
		sb.append(getLockDeferment());
		sb.append(", automaticallyAssign=");
		sb.append(getAutomaticallyAssign());
		sb.append(", defaultProject=");
		sb.append(getDefaultProject());
		sb.append(", externalUrl=");
		sb.append(getExternalUrl());
		sb.append(", externalMandatory=");
		sb.append(getExternalMandatory());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(67);

		sb.append("<model><model-name>");
		sb.append("com.jenginetest.builder.model.WLProject");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>projectId</column-name><column-value><![CDATA[");
		sb.append(getProjectId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createUserId</column-name><column-value><![CDATA[");
		sb.append(getCreateUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createUserName</column-name><column-value><![CDATA[");
		sb.append(getCreateUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedUserId</column-name><column-value><![CDATA[");
		sb.append(getModifiedUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedUserName</column-name><column-value><![CDATA[");
		sb.append(getModifiedUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startDate</column-name><column-value><![CDATA[");
		sb.append(getStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>color</column-name><column-value><![CDATA[");
		sb.append(getColor());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lockEnable</column-name><column-value><![CDATA[");
		sb.append(getLockEnable());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lockPeriodType</column-name><column-value><![CDATA[");
		sb.append(getLockPeriodType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lockDeferment</column-name><column-value><![CDATA[");
		sb.append(getLockDeferment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>automaticallyAssign</column-name><column-value><![CDATA[");
		sb.append(getAutomaticallyAssign());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>defaultProject</column-name><column-value><![CDATA[");
		sb.append(getDefaultProject());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>externalUrl</column-name><column-value><![CDATA[");
		sb.append(getExternalUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>externalMandatory</column-name><column-value><![CDATA[");
		sb.append(getExternalMandatory());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = WLProject.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			WLProject.class
		};
	private long _projectId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _createUserId;
	private String _createUserUuid;
	private String _createUserName;
	private Date _createDate;
	private long _modifiedUserId;
	private String _modifiedUserUuid;
	private String _modifiedUserName;
	private Date _modifiedDate;
	private Date _startDate;
	private String _title;
	private String _originalTitle;
	private int _status;
	private String _description;
	private String _color;
	private boolean _lockEnable;
	private String _lockPeriodType;
	private int _lockDeferment;
	private boolean _automaticallyAssign;
	private boolean _originalAutomaticallyAssign;
	private boolean _setOriginalAutomaticallyAssign;
	private boolean _defaultProject;
	private boolean _originalDefaultProject;
	private boolean _setOriginalDefaultProject;
	private String _externalUrl;
	private boolean _externalMandatory;
	private long _columnBitmask;
	private WLProject _escapedModelProxy;
}