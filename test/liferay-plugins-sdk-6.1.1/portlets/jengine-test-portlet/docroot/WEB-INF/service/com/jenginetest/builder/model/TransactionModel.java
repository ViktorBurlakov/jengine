/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.jenginetest.builder.model;

import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Transaction service. Represents a row in the &quot;SB_Transaction&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.jenginetest.builder.model.impl.TransactionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.jenginetest.builder.model.impl.TransactionImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Transaction
 * @see com.jenginetest.builder.model.impl.TransactionImpl
 * @see com.jenginetest.builder.model.impl.TransactionModelImpl
 * @generated
 */
public interface TransactionModel extends BaseModel<Transaction> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a transaction model instance should use the {@link Transaction} interface instead.
	 */

	/**
	 * Returns the primary key of this transaction.
	 *
	 * @return the primary key of this transaction
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this transaction.
	 *
	 * @param primaryKey the primary key of this transaction
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the transaction ID of this transaction.
	 *
	 * @return the transaction ID of this transaction
	 */
	public long getTransactionId();

	/**
	 * Sets the transaction ID of this transaction.
	 *
	 * @param transactionId the transaction ID of this transaction
	 */
	public void setTransactionId(long transactionId);

	/**
	 * Returns the book ID of this transaction.
	 *
	 * @return the book ID of this transaction
	 */
	public long getBookId();

	/**
	 * Sets the book ID of this transaction.
	 *
	 * @param bookId the book ID of this transaction
	 */
	public void setBookId(long bookId);

	/**
	 * Returns the member ID of this transaction.
	 *
	 * @return the member ID of this transaction
	 */
	public long getMemberId();

	/**
	 * Sets the member ID of this transaction.
	 *
	 * @param memberId the member ID of this transaction
	 */
	public void setMemberId(long memberId);

	/**
	 * Returns the tdate of this transaction.
	 *
	 * @return the tdate of this transaction
	 */
	public Date getTdate();

	/**
	 * Sets the tdate of this transaction.
	 *
	 * @param tdate the tdate of this transaction
	 */
	public void setTdate(Date tdate);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(Transaction transaction);

	public int hashCode();

	public CacheModel<Transaction> toCacheModel();

	public Transaction toEscapedModel();

	public String toString();

	public String toXmlString();
}